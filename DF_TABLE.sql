/* Drop Tables */

DROP TABLE CAST_MEMBER CASCADE CONSTRAINTS;
DROP TABLE ACTOR CASCADE CONSTRAINTS;
DROP TABLE BASKET CASCADE CONSTRAINTS;
DROP TABLE POST_COMMENT CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE DIRECTOR CASCADE CONSTRAINTS;
DROP TABLE HEART CASCADE CONSTRAINTS;
DROP TABLE LINE_REVIEW CASCADE CONSTRAINTS;
DROP TABLE MOVIE_POSTER CASCADE CONSTRAINTS;
DROP TABLE MOVIE_STILLCUT CASCADE CONSTRAINTS;
DROP TABLE ORDER_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE RATING CASCADE CONSTRAINTS;
DROP TABLE WATCH CASCADE CONSTRAINTS;
DROP TABLE MOVIE CASCADE CONSTRAINTS;
DROP TABLE GENRE CASCADE CONSTRAINTS;
DROP TABLE ORDER_HISTORY CASCADE CONSTRAINTS;
DROP TABLE PREFER_GENRE CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;




/* Create Tables */
-- 배우 테이블
CREATE TABLE ACTOR
(
	ACTOR_NUMBER number NOT NULL,
	ACTOR_NAME varchar2(200) NOT NULL,
	PRIMARY KEY (ACTOR_NUMBER)
);

-- 장바구니 테이블
CREATE TABLE BASKET
(
	BASKET_NO number NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (BASKET_NO)
);

-- 게시판 테이블
CREATE TABLE BOARD
(
	BOARD_NUMBER number NOT NULL,
	BOARD_TITLE varchar2(150) NOT NULL,
	BOARD_CONTENT varchar2(3000) NOT NULL,
	BOARD_CREATE_DATE date NOT NULL,
	BOARD_HIT number default 0 NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	PRIMARY KEY (BOARD_NUMBER)
);

-- 출연자 테이블
CREATE TABLE CAST_MEMBER
(
	CAST_MEMBER_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	ACTOR_NUMBER number NOT NULL,
	PRIMARY KEY (CAST_MEMBER_NUMBER)
);

-- 감독 테이블
CREATE TABLE DIRECTOR
(
	DIRECTOR_NUMBER number NOT NULL,
	DIRECTOR_NAME varchar2(200) NOT NULL,
	PRIMARY KEY (DIRECTOR_NUMBER)
);

-- 장르 테이블
CREATE TABLE GENRE
(
	GENRE_NUMBER number NOT NULL,
	GENRE_NAME varchar2(30) NOT NULL,
	PRIMARY KEY (GENRE_NUMBER)
);

-- 좋아요 테이블
CREATE TABLE HEART
(
	HEART_NUMBER number NOT NULL,
	HEART_CHECK varchar2(1) DEFAULT 'N' CHECK (HEART_CHECK = 'Y' OR HEART_CHECK = 'N') NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (HEART_NUMBER)
);

--한줄평 테이블
CREATE TABLE LINE_REVIEW
(
	LINE_REVIEW_NUMBER number NOT NULL,
	LINE_REVIEW_CONTEXT varchar2(150) NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (LINE_REVIEW_NUMBER)
);

-- 유저 테이블
CREATE TABLE MEMBER
(
	MEMBER_NUMBER number NOT NULL,
	MEMBER_ID varchar2(15) UNIQUE NOT NULL,
	MEMBER_PASSWORD varchar2(20) NOT NULL,
	MEMBER_NAME varchar2(100) NOT NULL,
	MEMBER_EMAIL varchar2(30) UNIQUE NOT NULL,
	MEMBER_BIRTH_DATE date NOT NULL,
	MEMBER_PHONE_NUMBER varchar2(11) UNIQUE NOT NULL,
	MEMBER_MONEY number default 0 NOT NULL,
	MEMBER_GENDER varchar2(1) CHECK (MEMBER_GENDER = 'M' OR MEMBER_GENDER = 'F') NOT NULL,
	MEMBER_CREATE_DATE date NOT NULL,
	MEMBER_MODIFY_DATE date NOT NULL,
	PRIMARY KEY (MEMBER_NUMBER)
);

-- 영화 테이블
CREATE TABLE MOVIE
(
	MOVIE_NUMBER number NOT NULL,
    MOVIE_CD VARCHAR2(100),
	MOVIE_TITLE varchar2(1000) NOT NULL,
	MOVIE_SUMMARY varchar2(4000),
	MOVIE_RELEASE_DATE date,
	MOVIE_RUNTIME varchar2(10),
	MOVIE_PRICE number NOT NULL,
	MOVIE_PREVIEW varchar2(4000),
	MOVIE_RATING varchar2(30),
	MOVIE_MAIN_POSTER varchar2(4000),
	GENRE_NUMBER number,
    DIRECTOR_NUMBER number,
	PRIMARY KEY (MOVIE_NUMBER)
);

-- 영화 포스터 테이블
CREATE TABLE MOVIE_POSTER
(
	MOVIE_POSTER_NUMBER number NOT NULL,
	MOVIE_POSTER_ADDRESS varchar2(4000),
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (MOVIE_POSTER_NUMBER)
);

-- 영화 스틸컷 테이블
CREATE TABLE MOVIE_STILLCUT
(
	MOVIE_STILLCUT_NUMBER number NOT NULL,
	MOVIE_STILLCUT_ADDRESS varchar2(4000),
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (MOVIE_STILLCUT_NUMBER)
);

-- 주문 내역 테이블
CREATE TABLE ORDER_HISTORY
(
	ORDER_HISTORY_NUMBER number NOT NULL,
	ORDER_HISTORY_TIME date NOT NULL,
    ORDER_HISTORY_STATE varchar2(1) CHECK (ORDER_HISTORY_STATE = 'Y' OR ORDER_HISTORY_STATE = 'R' OR ORDER_HISTORY_STATE = 'N') NOT NULL, -- Y: 구매확정 R: 환불확정 N: 환불가능
	MEMBER_NUMBER number NOT NULL,
	PRIMARY KEY (ORDER_HISTORY_NUMBER)
);

-- 주문 내역 상품 테이블
CREATE TABLE ORDER_PRODUCT
(
	ORDER_PRODUCT_NUMBER number NOT NULL,
	ORDER_HISTORY_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (ORDER_PRODUCT_NUMBER)
);

-- 게시판 댓글 테이블
CREATE TABLE POST_COMMENT
(
	POST_COMMENT_NUMBER number NOT NULL,
	POST_COMMENT_CONTENT varchar2(300) NOT NULL,
	POST_COMMENT_DATE date NOT NULL,
	BOARD_NUMBER number NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	PRIMARY KEY (POST_COMMENT_NUMBER)
);

-- 유저 선호 장르 테이블
CREATE TABLE PREFER_GENRE
(
	PREFER_GENRE_NUMBER number NOT NULL,
	PREFER_GENRE_FIRST NUMBER,
	PREFER_GENRE_SECOND NUMBER,
	PREFER_GENRE_THIRD NUMBER,
	MEMBER_NUMBER number NOT NULL,
	PRIMARY KEY (PREFER_GENRE_NUMBER)
);

-- 평점 테이블
CREATE TABLE RATING
(
	RATING_NUMBER number NOT NULL,
	RATING_GRADE number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	PRIMARY KEY (RATING_NUMBER)
);

-- 봤어요 테이블
CREATE TABLE WATCH
(
	WATCH_NUMBER number NOT NULL,
	WATCH_CHECK varchar2(1) DEFAULT 'N' CHECK (WATCH_CHECK = 'Y' OR WATCH_CHECK = 'N') NOT NULL,
	MEMBER_NUMBER number NOT NULL,
	MOVIE_NUMBER number NOT NULL,
	PRIMARY KEY (WATCH_NUMBER)
);



/* Create Foreign Keys */

ALTER TABLE CAST_MEMBER
	ADD FOREIGN KEY (ACTOR_NUMBER)
	REFERENCES ACTOR (ACTOR_NUMBER)
;


ALTER TABLE POST_COMMENT
	ADD FOREIGN KEY (BOARD_NUMBER)
	REFERENCES BOARD (BOARD_NUMBER)
;


ALTER TABLE MOVIE
	ADD FOREIGN KEY (GENRE_NUMBER)
	REFERENCES GENRE (GENRE_NUMBER)
;


ALTER TABLE BASKET
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE BOARD
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE HEART
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE LINE_REVIEW
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE ORDER_HISTORY
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE POST_COMMENT
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE PREFER_GENRE
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE RATING
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE WATCH
	ADD FOREIGN KEY (MEMBER_NUMBER)
	REFERENCES MEMBER (MEMBER_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE BASKET
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE CAST_MEMBER
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE MOVIE
	ADD FOREIGN KEY (DIRECTOR_NUMBER)
	REFERENCES DIRECTOR (DIRECTOR_NUMBER)
;


ALTER TABLE HEART
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE LINE_REVIEW
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE MOVIE_POSTER
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE MOVIE_STILLCUT
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE ORDER_PRODUCT
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE RATING
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE WATCH
	ADD FOREIGN KEY (MOVIE_NUMBER)
	REFERENCES MOVIE (MOVIE_NUMBER)
    ON DELETE CASCADE
;


ALTER TABLE ORDER_PRODUCT
	ADD FOREIGN KEY (ORDER_HISTORY_NUMBER)
	REFERENCES ORDER_HISTORY (ORDER_HISTORY_NUMBER)
;



